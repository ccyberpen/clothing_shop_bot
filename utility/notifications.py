import sqlite3
from .telegram_sender import send_telegram_message

async def notify_user(order_id: int, new_status: str) -> bool:
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ API"""
    conn = None
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        conn = sqlite3.connect("database.db")
        conn.row_factory = sqlite3.Row
        cur = conn.cursor()
        cur.execute("SELECT user_id FROM orders WHERE order_id = ?", (order_id,))
        order = cur.fetchone()
        
        if not order:
            print(f"Order {order_id} not found")
            return False

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        messages = {
            'new': "üÜï –í–∞—à –∑–∞–∫–∞–∑ #{} –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É",
            'processing': "üîÑ –í–∞—à –∑–∞–∫–∞–∑ #{} –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è",
            'completed': "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ #{} –∑–∞–≤–µ—Ä—à–µ–Ω",
            'cancelled': "‚ùå –í–∞—à –∑–∞–∫–∞–∑ #{} –æ—Ç–º–µ–Ω–µ–Ω"
        }
        text = messages.get(new_status, f"‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω–µ–Ω").format(order_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ API
        return await send_telegram_message(order['user_id'], text)
        
    except Exception as e:
        print(f"Notification error: {str(e)}")
        return False
    finally:
        if conn:
            conn.close()